시퀀스 : 중복되지않는 연속된 값을 자동 채변해주는 기능
--문법
create sequence [시퀀스명]
start with [시작숫자] : 시작숫자 지정가능. 후에 수정 불가능
increment by [증감.감소숫자] 
minvalue [최소값]
maxvalue [최대값]
cycle | nocycle  : 순환여부(시퀀스의 최댓값에 도달 시 최솟값 1부터 다시시작)
cache | nocache  : 메모리에 시퀀스 값을 미리 할당(대량 채번시 유용) 값을 지정하지 않으면 기본값은 20

--시퀀스 채번 (실행시마다 하나씩 증가)
select [시퀀스명].nextval
from dual;

--시퀀스 현재 CURRVAL은 NEXTVAL을 한번 실행한 세션에서만 사용 가능
select [시퀀스명].currval
from dual;

--수정 예시
ALTER SEQUENCE [시퀀스명] INCREMENT BY 2
 START WITH (변경불가) 외에는 모두 변경이 가능하다.
 
--삭제
drop sequence [시퀀스명]

=----------------------------

릴레이션의 특징
1. 원자값을 가져야한다.
2. 중복된 튜플이 존재해서는 안된다.

키 : 튜플을 식별할 수 있는 속성

슈퍼키 : 튜플을 식별할 수 있는 모든 속성의 조합
후보키 : 슈퍼키 중 최소 속성 조합
복합키 : 2개 이상의 속성으로 만들어진 키
기본키 : 후보키 중 대표로 선정된 키
	고려사항
	1. 키 값이 변동이 없어야한다.
	2. 보안 등 문제발생 소지가 없어야한다.
	3. null값 비허용
	
대리키 : 인조키, 릴레이션(테이블)내에 기본으로 가져갈 속성이 없을 때
			후보키가 존재하더라도 보안 등의 문제가 되는 경우
			일련번호같은 가상의 속성을 만들어 기본키로 삼는 키
			1. 무의미한 키 : 일련번호
			2. 유의미한 키 : 주민번호
			3. 혼합키(유의미 + 무의미) : ex. U001, A001
		
대체키 : 후보키 - 기본키
		기본키가 될 수 있는 후보키
외래키 : 다른 릴레이션 또는 자기자신 릴레이션의 기본키를 참조하는 속성으로 도메인이 같아야한다.
	null값, 중복값 허용
	
도메인: 릴레이션(테이블) 속성(컬럼)이 가질수 있는 값의 범위.


ANSI SQL
 : American National Stadard Institute(미국표준협회)
	에서 각기다른 DBMS에서 공통적으로 사용할 수 있도록 고안한 표준 SQL문 작성법
	
	장점 - 표준SQL문법이기 때문에 대부분의 DBMS에서 사용가능
		JOIN과 WHERE 가 분리되어 좀 더 직관적으로 쿼리 분석 및 작성이 가능
	단점 - 표현이 길어진다.
	
	
	
조인
inner join
outer join


	
부속질의(sub query) : 쿼리 내에 쿼리가 있는 방식(중첩쿼리)
-동작방식에 따라 
 1. 상관 부속질의 : 상위질의 튜플의 각 행이 하위질의 계산에 영향을 주는 부속질의
				레코드 각 행이 다른 행과의 비교할때 유용.
 2. 비상관 부속질의 : 상위질의와 독립적으로 수행되는 부속질의
 
-반환하는 결과에 따라
 1. 스칼라 부속질의 : 단일값 반환
 2. 단일행 부속질의 : 단일행 반환
 3. 다중행 부속질의 : 다중행 반환