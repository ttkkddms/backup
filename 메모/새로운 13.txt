자바스크립트
1. 변수 선언 및 할당 
	const 변수명 =  값 /재할당 불가능
	let 변수명 = 값 /재할당 가능
	
2. 문자열 템플릿
	const weight = 100;
	case1)
	console.log('몸무게는 '+weight+ 'kg입니다');
	case2)
	console.log(`몸무게는 ${weight}kg 입니다`); `````(1번키보드옆)
	
3. 함수
	함수선언문 
	: function 함수명(매개변수){실행문;}
	
	함수표현식 - 선언 후 호출가능
	: const 함수명 = function(매개변수){실행문;}
	
	화살표함수(람다표현식) - 선언후 호출가능
	주로 고차함수의 파라미터로 함수를 전달할때 사용
	: const 함수명 = (매개변수)=>{실행문}
	
	
	
4. 전역변수/지역변수
	전역변수 : 최상위 함수 외부에 선언된 변수
	지역변수 : 함수 내부에 선언된 변수(매개변수 포함)
	
5. 전역객체 (window, globalThis)
	브라우저 실행환경에서 미리 생성된 내장객체
	
6. 배열
	배열생성 : const arr = []; //빈 배열생성, 요소간 구분은 콤마
	배열요소의 길이 : 배열.length
	배열의 요소 추가 : 배열.push(값)
	배열관련 API(일반함수, 고차함수)
		고차함수 - 함수의 매개값으로 함수를 받는 함수를
		콜백함수 - 고차함수의 매개값으로 전달하는 함수
	


-----	const [first, second] = ['gildong', 'hong'];
		console.log(first, second); = gildong, hong

	
7. 객체
	객체생성
case1 : 객체리터럴
	const obj = {};//빈 객체 생성
	프로퍼티 구분은 세미콜론(;)
	프로퍼티키, 프로퍼티값의 구분은 콜론(:)
	
case2 : 생성자함수
	function 생성자함수명(){
	}
	function Person(name,age){
            this.name = name;
            this.age = age;
        }
		
case3 : class 문법
	class 클래스명{}
	
	
8. html 요소선택
window.document.getElementById('Id값');
window.document.querySelector('css선택자문법');
window.document.querySelectorAll('css선택자문법');

	
